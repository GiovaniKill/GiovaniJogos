services:
    frontend:
        container_name: app_frontend
        build:
          context: ./frontend
          dockerfile: ./Dockerfile.dev
        ports:
          - 3000:3000
        platform: linux/x86_64
        working_dir: /frontend
        volumes: 
          - ./frontend/src:/frontend/src
          - ./:/react-docker:delegated
          - /node_modules
        depends_on:
          backend:
            condition: service_healthy
        healthcheck:
          test: ["CMD", "lsof", "-t", "-i:3000"]
          timeout: 10s
          retries: 5
        environment:
          - CHOKIDAR_USEPOLLING=true
          - NODE_ENV=development
    backend:
        build:
          context: ./backend
          dockerfile: ./Dockerfile.dev
        container_name: app_backend
        ports:
          - 3001:3001
        platform: linux/x86_64
        working_dir: /backend
        volumes: 
          - ./backend/src:/backend/src
        environment:
          - APP_PORT=${APP_PORT}
          - NODE_ENV=development
          - ANSWER_PASSWORD=${ANSWER_PASSWORD_DEV}
          - OPENAI_ORG=${OPENAI_ORG}
          - OPENAI_API_KEY=${OPENAI_API_KEY}
          - MYSQL_USER=root
          - MYSQL_PASSWORD=${MYSQL_PASSWORD_DEV}
          - MYSQL_DATABASE=${MYSQL_DATABASE}
          - MYSQL_HOST=${MYSQL_HOST}
          - MYSQL_PORT=3306
          - JWT_SECRET=${JWT_SECRET_DEV}
        healthcheck:
          test: ["CMD", "lsof", "-t", "-i:3001"]
          timeout: 10s
          retries: 5
        depends_on:
          db:
            condition: service_healthy  
    db:
      image: mysql:8.0.21
      container_name: db
      platform: linux/x86_64
      ports:
        - 3306:3306
      environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD_DEV}
      restart: 'always'
      healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 10s
        retries: 5
      cap_add:
        - SYS_NICE
      volumes:
      - dbdata:/var/lib/mysql
volumes:
  dbdata:  